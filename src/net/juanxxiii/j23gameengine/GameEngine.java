/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.juanxxiii.j23gameengine;

import java.awt.CardLayout;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import javax.swing.JOptionPane;
import net.juanxxiii.j23gameengine.gui.*;
import util.PropertiesManager;

/**
 * JFrame contenedor de la aplicación.
 * Utiliza un BorderLayout.
 * Contiene un JPanel con CardLayout llamado jpContainer sobre el que 
 * se agregarán los paneles
 * 
 * @author Fernando Paniagua/Profesor
 */
public class GameEngine extends javax.swing.JFrame {
    public static int screenWidth;
    public static int screenHeight;
    public static int screenX;
    public static int screenY;
    public static String screenTitle;
    private static JPTitle jpt;
    private static JPGameScreen jpgs;
    private static JPCredits jpc;
    
    /**
     * Creates new form GameEngine
     */
    public GameEngine() {
        java.net.URL url;
        try {
            initComponents();
            //Carga la configuración del proyecto
            PropertiesManager pm = new PropertiesManager();
            pm.loadProperties();
            this.setTitle(screenTitle);
            this.setBounds(screenX,screenY,screenWidth,screenHeight);
            this.setResizable(false);
            //Carga el icono de la aplicación
            url = ClassLoader.getSystemResource("assets/icon.png");
            Toolkit kit = Toolkit.getDefaultToolkit();
            Image img = kit.createImage(url);
            this.setIconImage(img);
            //Instanciamos y agregamos de los paneles 
            //(el primero en agregarse es el visible al principio)
            jpt = new JPTitle();
            jpc = new JPCredits();
            jpgs = new JPGameScreen();
            this.jpContainer.add("cover",jpt);
            this.jpContainer.add("gamescreen",jpgs);
            this.jpContainer.add("credits",jpc);
        
            //Cambiamos el cursor
            this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,
                    "Ha ocurrido un error al leer el fichero de configuración", 
                    "DAAM v1.0", 
                    JOptionPane.ERROR_MESSAGE);
            System.exit(-1);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null,
                    "Ha ocurrido un error al iniciar la aplicación", 
                    "DAAM v1.0", 
                    JOptionPane.ERROR_MESSAGE);
            System.exit(-1);
        }
    }

    public void comenzarJuego(){
        //Cambiamos el cursor
        this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        //Muestra la pantalla del juego y lo arranca
        ((CardLayout)this.jpContainer.getLayout()).show(jpContainer, "gamescreen");
        new Thread(jpgs).start();//Arranca el thread
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpContainer = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmiLoad = new javax.swing.JMenuItem();
        jmiSave = new javax.swing.JMenuItem();
        jmiExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmiStartGame = new javax.swing.JMenuItem();
        jmiPause = new javax.swing.JMenuItem();
        jmiStop = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jmiAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpContainer.setLayout(new java.awt.CardLayout());
        getContentPane().add(jpContainer, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        jmiLoad.setText("Load");
        jmiLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiLoadActionPerformed(evt);
            }
        });
        jMenu1.add(jmiLoad);

        jmiSave.setText("Save");
        jmiSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSaveActionPerformed(evt);
            }
        });
        jMenu1.add(jmiSave);

        jmiExit.setText("Exit");
        jmiExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExitActionPerformed(evt);
            }
        });
        jMenu1.add(jmiExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Game");

        jmiStartGame.setText("Start");
        jmiStartGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiStartGameActionPerformed(evt);
            }
        });
        jMenu2.add(jmiStartGame);

        jmiPause.setText("Pause");
        jmiPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPauseActionPerformed(evt);
            }
        });
        jMenu2.add(jmiPause);

        jmiStop.setText("Stop");
        jmiStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiStopActionPerformed(evt);
            }
        });
        jMenu2.add(jmiStop);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        jmiAbout.setText("About");
        jmiAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAboutActionPerformed(evt);
            }
        });
        jMenu3.add(jmiAbout);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAboutActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "By Ruben, Javi, David, Jose y Sergio (2017)", 
                "DAAM v1.0", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jmiAboutActionPerformed

    private void jmiExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jmiExitActionPerformed

    private void jmiStartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiStartGameActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Acción no implementada", 
                "DAAM v1.0", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jmiStartGameActionPerformed

    private void jmiLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiLoadActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Acción no implementada", 
                "DAAM v1.0", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jmiLoadActionPerformed

    private void jmiSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSaveActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Acción no implementada", 
                "DAAM v1.0", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jmiSaveActionPerformed

    private void jmiPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPauseActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Acción no implementada", 
                "DAAM v1.0", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jmiPauseActionPerformed

    private void jmiStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiStopActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Acción no implementada", 
                "DAAM v1.0", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jmiStopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new GameEngine().setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jmiAbout;
    private javax.swing.JMenuItem jmiExit;
    private javax.swing.JMenuItem jmiLoad;
    private javax.swing.JMenuItem jmiPause;
    private javax.swing.JMenuItem jmiSave;
    private javax.swing.JMenuItem jmiStartGame;
    private javax.swing.JMenuItem jmiStop;
    private javax.swing.JPanel jpContainer;
    // End of variables declaration//GEN-END:variables
}
